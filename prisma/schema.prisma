// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

enum TipoPersona {
    Administrador
    Narrador
    Jugador
}

enum EstadoMesa {
    Abierta
    Cerrada
    EnCurso
    Finalizada
    Cancelada
}

model Persona {
    idPersona         Int         @id @default(autoincrement())
    nombre            String
    apodo             String
    fechaNacimiento   DateTime    @db.Date
    email             String      @unique
    tipo              TipoPersona
    quiereNarrar      Boolean
    habilitado        Boolean
    desabilitadoHasta DateTime?
    fechaAlta         DateTime    @default(now())
    baja              Boolean
    fechaBaja         DateTime?

    Sugerencia  Sugerencia[]
    Inscripcion Inscripcion[]
    Mesa        Mesa[]
}

model Juego {
    idJuego     Int          @id @default(autoincrement())
    nombre      String       @unique
    descripcion String
    borrado     Boolean
    Sugerencia  Sugerencia[]
    Mesa        Mesa[]
}

model Lugar {
    idLugar   Int     @id @default(autoincrement())
    nombre    String  @unique
    direccion String
    borrado   Boolean
    Mesa      Mesa[]
}

model Sugerencia {
    idSugerencia    Int      @id @default(autoincrement())
    jugador         Persona  @relation(fields: [idJugador], references: [idPersona])
    idJugador       Int
    juego           Juego    @relation(fields: [idJuego], references: [idJuego])
    idJuego         Int
    fechaSugerencia DateTime @default(now())
}

model Inscripcion {
    idInscripcion    Int      @id @default(autoincrement())
    jugador          Persona  @relation(fields: [idJugador], references: [idPersona])
    idJugador        Int
    mesa             Mesa     @relation(fields: [idMesa], references: [idMesa])
    idMesa           Int
    fechaInscripcion DateTime @default(now())
    asistencia       Boolean?
    baja             Boolean
}

model Mesa {
    idMesa        Int           @id @default(autoincrement())
    narrador      Persona       @relation(fields: [idNarrador], references: [idPersona])
    idNarrador    Int
    juego         Juego         @relation(fields: [idJuego], references: [idJuego])
    idJuego       Int
    lugar         Lugar         @relation(fields: [idLugar], references: [idLugar])
    idLugar       Int
    fechaHora     DateTime
    notas         String
    cupoMin       Int
    cupoMax       Int
    jugadores     Inscripcion[]
    estado        EstadoMesa
    publica       Boolean
    codigo        String?
    fechaCreacion DateTime      @default(now())
}
